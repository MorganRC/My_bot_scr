import json
from aiogram import Dispatcher, Bot, executor, types
from config import TOKEN
from aiogram.dispatcher.filters import Text
from main import collect_data
from aiogram.utils.markdown import hbold, hlink
import time
import requests

bot = Bot(token=TOKEN, parse_mode=types.ParseMode.HTML)
#–≤—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
dp = Dispatcher(bot)  #–¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–∞–º–∏



@dp.message_handler(commands='start')
async def start(message: types.Message):  #—Ñ—É–Ω–∫—Ü–∏—è –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è,–¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
    num_buttoms = ['Give your number ‚òéÔ∏è']
    start_buttoms = ['üî™knives', 'ü•ägloves', 'üî´sniper rifles']  #—Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –±–æ—Ç–µ –∏ –¥–æ–±–∞–≤–ª—è—é –≤ –Ω–µ–µ —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±—å–µ–∫—Ç–æ–≤
    keybord = types.ReplyKeyboardMarkup(resize_keyboard=True)  #—Å–æ–∑–¥–∞—é –æ–±—å–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –ø–∞—Ä–∞–º–µ—Ç—Ä —á—Ç–æ –±—ã –∫–Ω–æ–ø–∫–∏ –±—ã–ª–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
    keybord.add(*start_buttoms)
    keybord.add(*num_buttoms)
    await message.answer('Hi, please,choose category!', reply_markup=keybord)


@dp.message_handler(Text(equals='ü•ägloves'))
async def get_discount_knives(message: types.Message):
    await message.answer('Please waiting...')

    collect_data()#–∏–º–ø–æ—Ä—Ç –¥–ª—è –ø–æ–¥–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ json —Ñ–∞–π–ª–∞ –≤ main
    with open('result1.json') as file:
        data = json.load(file)
    for index, item in enumerate(data):#–¥–∞–µ—Ç –∫—Ä–æ–º–µ –æ–±—å–µ–∫—Ç–∞ –∏–Ω–¥–µ–∫—Å –≥–¥–µ –æ–Ω –Ω–∞—Ö–æ–∂—É–∏—Ç—Å—è enumerate
        card = f'{hlink(item.get("fullName"), item.get("3d"))}\n'\
               f'{hbold("Discount: ")}{item.get("overprice")}%\n'\
               f'{hbold("Price: ")}${item.get("price")}üî•'
        if index%20==0:#–µ—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ 20 –±—É–¥–µ—Ç 0 —Ç–æ –∑–∞—Å—ã–ø–∞–µ–º –Ω–∞ 3 —Å–µ–∫—É–Ω–¥—ã —á—Ç–æ –±—ã –Ω–µ –±—ã–ª–æ –±–∞–Ω–∞ –∑–∞ —Ñ–ª—É–¥
            time.sleep(3)
        await message.answer(card)
@dp.message_handler(Text(equals='üî™knives'))
async def get_discount_gloves(message: types.Message):
    await message.answer('Please waiting...')

    collect_data()

    with open('result2.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("fullName"), item.get("3d"))}\n' \
               f'{hbold("Discount: ")}{item.get("overprice")}%\n' \
               f'{hbold("Price: ")}${item.get("price")}üî•'

        if index % 20 == 0:
            time.sleep(3)

        await message.answer(card)

@dp.message_handler(Text(equals='üî´sniper rifles'))
async def get_discount_gloves(message: types.Message):
    await message.answer('Please waiting...')

    collect_data()

    with open('result3.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("fullName"), item.get("3d"))}\n' \
               f'{hbold("Discount: ")}{item.get("overprice")}%\n' \
               f'{hbold("Price: ")}${item.get("price")}üî•'

        if index % 20 == 0:
            time.sleep(3)

        await message.answer(card)

def main():
    executor.start_polling(dp)#–¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞

if __name__ == '__main__':
    main()